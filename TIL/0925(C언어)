C언어 메모리 접근 방법
& (Ampersand, 앰퍼샌드) 메모리 주소로 변환
* (Asterisk, 애스트러스크) 주소의 값

포인터 변수
int *ptr = &num
메모리 주소를 갖는다.

메모리 주소는 컴퓨터마다 값이 다르게 나온다.


포인트 변수 앞에 *을 붙여서 출력하면 주소의 값이 아닌 주소에 들어있는 값이 나온다.
(역참조)
int num = 42;
int *ptr = &num;    &num의 주소값을 300이라고 가정
printf("%d\n", &num);   출력값 : 300
printf("%d\n", *pointer); 출력값 : 42

문자열(String)과 배열은 기본적으로 메모리 주소를 가지고 있다.
그래서 배열을 프린트 했을 경우 첫번째의 주소를 가지고 있기에 값을 출력하면
맨 앞에 한개만 가져오게 된다.
int arr[] = {4, 2, 5, 6};
printf("%d\n", *arr);
출력값 : 4가 나오게 된다.

문자열의 마지막에는 \0 (Null)이 들어가 있다.

배열 자체가 메모리 주소이기에 변수 앞에 &을 붙이면 오류가 난다.
